/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as StudyPlansImport } from './routes/study-plans'
import { Route as ProgressImport } from './routes/progress'
import { Route as PracticeTestsImport } from './routes/practice-tests'
import { Route as GoalsImport } from './routes/goals'
import { Route as FlashcardsImport } from './routes/flashcards'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as AuthImport } from './routes/auth'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const StudyPlansRoute = StudyPlansImport.update({
  id: '/study-plans',
  path: '/study-plans',
  getParentRoute: () => rootRoute,
} as any)

const ProgressRoute = ProgressImport.update({
  id: '/progress',
  path: '/progress',
  getParentRoute: () => rootRoute,
} as any)

const PracticeTestsRoute = PracticeTestsImport.update({
  id: '/practice-tests',
  path: '/practice-tests',
  getParentRoute: () => rootRoute,
} as any)

const GoalsRoute = GoalsImport.update({
  id: '/goals',
  path: '/goals',
  getParentRoute: () => rootRoute,
} as any)

const FlashcardsRoute = FlashcardsImport.update({
  id: '/flashcards',
  path: '/flashcards',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/flashcards': {
      id: '/flashcards'
      path: '/flashcards'
      fullPath: '/flashcards'
      preLoaderRoute: typeof FlashcardsImport
      parentRoute: typeof rootRoute
    }
    '/goals': {
      id: '/goals'
      path: '/goals'
      fullPath: '/goals'
      preLoaderRoute: typeof GoalsImport
      parentRoute: typeof rootRoute
    }
    '/practice-tests': {
      id: '/practice-tests'
      path: '/practice-tests'
      fullPath: '/practice-tests'
      preLoaderRoute: typeof PracticeTestsImport
      parentRoute: typeof rootRoute
    }
    '/progress': {
      id: '/progress'
      path: '/progress'
      fullPath: '/progress'
      preLoaderRoute: typeof ProgressImport
      parentRoute: typeof rootRoute
    }
    '/study-plans': {
      id: '/study-plans'
      path: '/study-plans'
      fullPath: '/study-plans'
      preLoaderRoute: typeof StudyPlansImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/auth': typeof AuthRoute
  '/dashboard': typeof DashboardRoute
  '/flashcards': typeof FlashcardsRoute
  '/goals': typeof GoalsRoute
  '/practice-tests': typeof PracticeTestsRoute
  '/progress': typeof ProgressRoute
  '/study-plans': typeof StudyPlansRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/auth': typeof AuthRoute
  '/dashboard': typeof DashboardRoute
  '/flashcards': typeof FlashcardsRoute
  '/goals': typeof GoalsRoute
  '/practice-tests': typeof PracticeTestsRoute
  '/progress': typeof ProgressRoute
  '/study-plans': typeof StudyPlansRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/auth': typeof AuthRoute
  '/dashboard': typeof DashboardRoute
  '/flashcards': typeof FlashcardsRoute
  '/goals': typeof GoalsRoute
  '/practice-tests': typeof PracticeTestsRoute
  '/progress': typeof ProgressRoute
  '/study-plans': typeof StudyPlansRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/auth'
    | '/dashboard'
    | '/flashcards'
    | '/goals'
    | '/practice-tests'
    | '/progress'
    | '/study-plans'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/auth'
    | '/dashboard'
    | '/flashcards'
    | '/goals'
    | '/practice-tests'
    | '/progress'
    | '/study-plans'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/auth'
    | '/dashboard'
    | '/flashcards'
    | '/goals'
    | '/practice-tests'
    | '/progress'
    | '/study-plans'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  AuthRoute: typeof AuthRoute
  DashboardRoute: typeof DashboardRoute
  FlashcardsRoute: typeof FlashcardsRoute
  GoalsRoute: typeof GoalsRoute
  PracticeTestsRoute: typeof PracticeTestsRoute
  ProgressRoute: typeof ProgressRoute
  StudyPlansRoute: typeof StudyPlansRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  AuthRoute: AuthRoute,
  DashboardRoute: DashboardRoute,
  FlashcardsRoute: FlashcardsRoute,
  GoalsRoute: GoalsRoute,
  PracticeTestsRoute: PracticeTestsRoute,
  ProgressRoute: ProgressRoute,
  StudyPlansRoute: StudyPlansRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/auth",
        "/dashboard",
        "/flashcards",
        "/goals",
        "/practice-tests",
        "/progress",
        "/study-plans"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/auth": {
      "filePath": "auth.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.tsx"
    },
    "/flashcards": {
      "filePath": "flashcards.tsx"
    },
    "/goals": {
      "filePath": "goals.tsx"
    },
    "/practice-tests": {
      "filePath": "practice-tests.tsx"
    },
    "/progress": {
      "filePath": "progress.tsx"
    },
    "/study-plans": {
      "filePath": "study-plans.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
